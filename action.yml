name: 'CapRover action'
description: 'Deploy to caprover server with complete flexibility'
author: 'Hazeezet'

branding:
    icon: upload-cloud
    color: yellow

inputs:

    server:
        description: 'CapRover admin panel URL. Example: https://root.domain.com'
        required: true
        
    app-token:
        description: 'CapRover app token.'
        required: true

    app-name:
        description: 'Application name on the CapRover server. Your app must exists.'
        required: true

    registry-host:
        description: 'You docker registry url Example: registry.gitlab.com/username/caprover-docker-images. this is used to store image temporarily before deploying'
        required: false
        default: ''

    registry-user:
        description: 'Docker registry token.'
        required: false
        default: ''

    registry-token:
        description: 'Docker registry token.'
        required: false
        default: ''

    plain:
        description: 'If you are deploying plain files'
        required: false
        default: false

    tarfile:
        description: 'If you are deploying tar file'
        required: false
        default: false
    
    branch:
        description: 'If you are deploying plain files then set the branch name to deploy'
        required: false
        default: main

    content:
        description: 'Project folder path or tar file to use to create the image or upload'
        required: false
        default: ''

    dockerfile:
        description: 'Docker file path of your project'
        required: false
        default: ''

    image-name:
        description: 'Image name in your registry'
        required: false
        default: ''

    image-tag:
        description: 'New image tag'
        required: false
        default: latest

runs:
    using: composite
    steps:
        -   name: Login to Docker registry
            if: ${{ inputs.plain == 'false' && inputs.tarfile == 'false' }}
            uses: docker/login-action@v2
            with:
                registry: ${{ inputs.registry-host }}
                username: ${{ inputs.registry-user }}
                password: ${{ inputs.registry-token }}

        -   name: setting image name
            if: ${{ inputs.plain == 'false' && inputs.tarfile == 'false' }}
            id: image-tag
            run:    |
                echo "IMAGE=${{ inputs.registry-host }}/${{ inputs.registry-user }}/${{ inputs.image-name}}:${{ inputs.image-tag }}" >> $GITHUB_OUTPUT
            shell: bash

        -   name: Set up Docker Buildx
            if: ${{ inputs.plain == 'false' && inputs.tarfile == 'false' }}
            uses: docker/setup-buildx-action@v2

        -   name: Build and push
            if: ${{ inputs.plain == 'false' && inputs.tarfile == 'false' }}
            uses: docker/build-push-action@v3
            with:
                context: ${{ inputs.content }}
                file: ${{ inputs.dockerfile }}
                push: true
                tags: ${{ steps.image-tag.outputs.IMAGE }}

        -   name: deploying image to caprover
            if: ${{ inputs.plain == 'false' && inputs.tarfile == 'false' }}
            run: |
                echo "Deploying image to CapRover..."
                docker run caprover/cli-caprover:latest caprover deploy --host ${{inputs.server}} --appToken ${{inputs.app-token}} --appName ${{inputs.app-name}} --imageName ${{ steps.image-tag.outputs.IMAGE }}
            shell: bash

        -   name: using node 18
            if: ${{ inputs.plain == 'true' || inputs.tarfile == 'true' }}
            uses: actions/setup-node@v3
            with:
                node-version: 18

        -   name: installing caprover
            if: ${{ inputs.plain == 'true' || inputs.tarfile == 'true' }}
            run: npm i -g caprover
            shell: bash

        -   name: deploying plain files to caprover
            if: ${{ inputs.plain == 'true' && inputs.tarfile == 'false' }}
            run: |
                echo "Deploying plain files to CapRover..."
                caprover deploy --host ${{inputs.server}} --appToken ${{inputs.app-token}} --appName ${{inputs.app-name}} --branch ${{inputs.branch}}
            shell: bash

        -   name: deploying tar file to caprover
            if: ${{ inputs.tarfile == 'true' && inputs.plain == 'false' }}
            run: |
                echo "Deploying tar file to CapRover..."
                caprover deploy --host ${{inputs.server}} --appToken ${{inputs.app-token}} --appName ${{inputs.app-name}} --tarFile ${{ inputs.content }}
            shell: bash
